#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Brafton.Modules.BraftonImporter7_02_02.dbDataLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DNN_DB")]
	public partial class DNNDataLayerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBlog_Entry(Blog_Entry instance);
    partial void UpdateBlog_Entry(Blog_Entry instance);
    partial void DeleteBlog_Entry(Blog_Entry instance);
    partial void InsertBlog_Category(Blog_Category instance);
    partial void UpdateBlog_Category(Blog_Category instance);
    partial void DeleteBlog_Category(Blog_Category instance);
    partial void InsertBlog_Entry_Category(Blog_Entry_Category instance);
    partial void UpdateBlog_Entry_Category(Blog_Entry_Category instance);
    partial void DeleteBlog_Entry_Category(Blog_Entry_Category instance);
    partial void InsertBraftonTable(BraftonTable instance);
    partial void UpdateBraftonTable(BraftonTable instance);
    partial void DeleteBraftonTable(BraftonTable instance);
    #endregion
		
		public DNNDataLayerDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DNN_DBConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DNNDataLayerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DNNDataLayerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DNNDataLayerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DNNDataLayerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Blog_Entry> Blog_Entries
		{
			get
			{
				return this.GetTable<Blog_Entry>();
			}
		}
		
		public System.Data.Linq.Table<Blog_Category> Blog_Categories
		{
			get
			{
				return this.GetTable<Blog_Category>();
			}
		}
		
		public System.Data.Linq.Table<Blog_Entry_Category> Blog_Entry_Categories
		{
			get
			{
				return this.GetTable<Blog_Entry_Category>();
			}
		}
		
		public System.Data.Linq.Table<BraftonTable> BraftonTables
		{
			get
			{
				return this.GetTable<BraftonTable>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog_Entries")]
	public partial class Blog_Entry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlogID;
		
		private int _EntryID;
		
		private string _Title;
		
		private string _Entry;
		
		private System.DateTime _AddedDate;
		
		private bool _Published;
		
		private string _Description;
		
		private System.Nullable<bool> _AllowComments;
		
		private bool _DisplayCopyright;
		
		private string _Copyright;
		
		private string _PermaLink;
		
		private string _BraftonID;
		
		private System.Nullable<System.DateTime> _LastUpdatedOn;
		
		private EntitySet<Blog_Entry_Category> _Blog_Entry_Categories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogIDChanging(int value);
    partial void OnBlogIDChanged();
    partial void OnEntryIDChanging(int value);
    partial void OnEntryIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnEntryChanging(string value);
    partial void OnEntryChanged();
    partial void OnAddedDateChanging(System.DateTime value);
    partial void OnAddedDateChanged();
    partial void OnPublishedChanging(bool value);
    partial void OnPublishedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAllowCommentsChanging(System.Nullable<bool> value);
    partial void OnAllowCommentsChanged();
    partial void OnDisplayCopyrightChanging(bool value);
    partial void OnDisplayCopyrightChanged();
    partial void OnCopyrightChanging(string value);
    partial void OnCopyrightChanged();
    partial void OnPermaLinkChanging(string value);
    partial void OnPermaLinkChanged();
    partial void OnBraftonIDChanging(string value);
    partial void OnBraftonIDChanged();
    partial void OnLastUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedOnChanged();
    #endregion
		
		public Blog_Entry()
		{
			this._Blog_Entry_Categories = new EntitySet<Blog_Entry_Category>(new Action<Blog_Entry_Category>(this.attach_Blog_Entry_Categories), new Action<Blog_Entry_Category>(this.detach_Blog_Entry_Categories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogID", DbType="Int NOT NULL")]
		public int BlogID
		{
			get
			{
				return this._BlogID;
			}
			set
			{
				if ((this._BlogID != value))
				{
					this.OnBlogIDChanging(value);
					this.SendPropertyChanging();
					this._BlogID = value;
					this.SendPropertyChanged("BlogID");
					this.OnBlogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					this.OnEntryIDChanging(value);
					this.SendPropertyChanging();
					this._EntryID = value;
					this.SendPropertyChanged("EntryID");
					this.OnEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entry", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Entry
		{
			get
			{
				return this._Entry;
			}
			set
			{
				if ((this._Entry != value))
				{
					this.OnEntryChanging(value);
					this.SendPropertyChanging();
					this._Entry = value;
					this.SendPropertyChanged("Entry");
					this.OnEntryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedDate", DbType="DateTime NOT NULL")]
		public System.DateTime AddedDate
		{
			get
			{
				return this._AddedDate;
			}
			set
			{
				if ((this._AddedDate != value))
				{
					this.OnAddedDateChanging(value);
					this.SendPropertyChanging();
					this._AddedDate = value;
					this.SendPropertyChanged("AddedDate");
					this.OnAddedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Published", DbType="Bit NOT NULL")]
		public bool Published
		{
			get
			{
				return this._Published;
			}
			set
			{
				if ((this._Published != value))
				{
					this.OnPublishedChanging(value);
					this.SendPropertyChanging();
					this._Published = value;
					this.SendPropertyChanged("Published");
					this.OnPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowComments", DbType="Bit")]
		public System.Nullable<bool> AllowComments
		{
			get
			{
				return this._AllowComments;
			}
			set
			{
				if ((this._AllowComments != value))
				{
					this.OnAllowCommentsChanging(value);
					this.SendPropertyChanging();
					this._AllowComments = value;
					this.SendPropertyChanged("AllowComments");
					this.OnAllowCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCopyright", DbType="Bit NOT NULL")]
		public bool DisplayCopyright
		{
			get
			{
				return this._DisplayCopyright;
			}
			set
			{
				if ((this._DisplayCopyright != value))
				{
					this.OnDisplayCopyrightChanging(value);
					this.SendPropertyChanging();
					this._DisplayCopyright = value;
					this.SendPropertyChanged("DisplayCopyright");
					this.OnDisplayCopyrightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Copyright", DbType="NVarChar(255)")]
		public string Copyright
		{
			get
			{
				return this._Copyright;
			}
			set
			{
				if ((this._Copyright != value))
				{
					this.OnCopyrightChanging(value);
					this.SendPropertyChanging();
					this._Copyright = value;
					this.SendPropertyChanged("Copyright");
					this.OnCopyrightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermaLink", DbType="NVarChar(1024)")]
		public string PermaLink
		{
			get
			{
				return this._PermaLink;
			}
			set
			{
				if ((this._PermaLink != value))
				{
					this.OnPermaLinkChanging(value);
					this.SendPropertyChanging();
					this._PermaLink = value;
					this.SendPropertyChanged("PermaLink");
					this.OnPermaLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BraftonID", DbType="NVarChar(255)")]
		public string BraftonID
		{
			get
			{
				return this._BraftonID;
			}
			set
			{
				if ((this._BraftonID != value))
				{
					this.OnBraftonIDChanging(value);
					this.SendPropertyChanging();
					this._BraftonID = value;
					this.SendPropertyChanged("BraftonID");
					this.OnBraftonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedOn
		{
			get
			{
				return this._LastUpdatedOn;
			}
			set
			{
				if ((this._LastUpdatedOn != value))
				{
					this.OnLastUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedOn = value;
					this.SendPropertyChanged("LastUpdatedOn");
					this.OnLastUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Entry_Blog_Entry_Category", Storage="_Blog_Entry_Categories", ThisKey="EntryID", OtherKey="EntryID")]
		public EntitySet<Blog_Entry_Category> Blog_Entry_Categories
		{
			get
			{
				return this._Blog_Entry_Categories;
			}
			set
			{
				this._Blog_Entry_Categories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Blog_Entry_Categories(Blog_Entry_Category entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Entry = this;
		}
		
		private void detach_Blog_Entry_Categories(Blog_Entry_Category entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Entry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog_Categories")]
	public partial class Blog_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatID;
		
		private string _Category;
		
		private string _Slug;
		
		private System.Nullable<int> _ParentID;
		
		private int _PortalID;
		
		private EntitySet<Blog_Entry_Category> _Blog_Entry_Categories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatIDChanging(int value);
    partial void OnCatIDChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    #endregion
		
		public Blog_Category()
		{
			this._Blog_Entry_Categories = new EntitySet<Blog_Entry_Category>(new Action<Blog_Entry_Category>(this.attach_Blog_Entry_Categories), new Action<Blog_Entry_Category>(this.detach_Blog_Entry_Categories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slug", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Category_Blog_Entry_Category", Storage="_Blog_Entry_Categories", ThisKey="CatID", OtherKey="CatID")]
		public EntitySet<Blog_Entry_Category> Blog_Entry_Categories
		{
			get
			{
				return this._Blog_Entry_Categories;
			}
			set
			{
				this._Blog_Entry_Categories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Blog_Entry_Categories(Blog_Entry_Category entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Category = this;
		}
		
		private void detach_Blog_Entry_Categories(Blog_Entry_Category entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog_Entry_Categories")]
	public partial class Blog_Entry_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntryCatID;
		
		private System.Nullable<int> _EntryID;
		
		private System.Nullable<int> _CatID;
		
		private EntityRef<Blog_Category> _Blog_Category;
		
		private EntityRef<Blog_Entry> _Blog_Entry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntryCatIDChanging(int value);
    partial void OnEntryCatIDChanged();
    partial void OnEntryIDChanging(System.Nullable<int> value);
    partial void OnEntryIDChanged();
    partial void OnCatIDChanging(System.Nullable<int> value);
    partial void OnCatIDChanged();
    #endregion
		
		public Blog_Entry_Category()
		{
			this._Blog_Category = default(EntityRef<Blog_Category>);
			this._Blog_Entry = default(EntityRef<Blog_Entry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryCatID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntryCatID
		{
			get
			{
				return this._EntryCatID;
			}
			set
			{
				if ((this._EntryCatID != value))
				{
					this.OnEntryCatIDChanging(value);
					this.SendPropertyChanging();
					this._EntryCatID = value;
					this.SendPropertyChanged("EntryCatID");
					this.OnEntryCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", DbType="Int")]
		public System.Nullable<int> EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					if (this._Blog_Entry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryIDChanging(value);
					this.SendPropertyChanging();
					this._EntryID = value;
					this.SendPropertyChanged("EntryID");
					this.OnEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", DbType="Int")]
		public System.Nullable<int> CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					if (this._Blog_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Category_Blog_Entry_Category", Storage="_Blog_Category", ThisKey="CatID", OtherKey="CatID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Blog_Category Blog_Category
		{
			get
			{
				return this._Blog_Category.Entity;
			}
			set
			{
				Blog_Category previousValue = this._Blog_Category.Entity;
				if (((previousValue != value) 
							|| (this._Blog_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Blog_Category.Entity = null;
						previousValue.Blog_Entry_Categories.Remove(this);
					}
					this._Blog_Category.Entity = value;
					if ((value != null))
					{
						value.Blog_Entry_Categories.Add(this);
						this._CatID = value.CatID;
					}
					else
					{
						this._CatID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Blog_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Entry_Blog_Entry_Category", Storage="_Blog_Entry", ThisKey="EntryID", OtherKey="EntryID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Blog_Entry Blog_Entry
		{
			get
			{
				return this._Blog_Entry.Entity;
			}
			set
			{
				Blog_Entry previousValue = this._Blog_Entry.Entity;
				if (((previousValue != value) 
							|| (this._Blog_Entry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Blog_Entry.Entity = null;
						previousValue.Blog_Entry_Categories.Remove(this);
					}
					this._Blog_Entry.Entity = value;
					if ((value != null))
					{
						value.Blog_Entry_Categories.Add(this);
						this._EntryID = value.EntryID;
					}
					else
					{
						this._EntryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Blog_Entry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Brafton")]
	public partial class BraftonTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Content;
		
		private string _Api;
		
		private string _BaseUrl;
		
		private System.Nullable<int> _BlogId;
		
		private System.Nullable<int> _PortalId;
		
		private System.Nullable<int> _TabId;
		
		private string _DomainName;
		
		private System.Nullable<int> _Limit;
		
		private int _IncUpdatedFeedContentValue;
		
		private System.Nullable<int> _Counter;
		
		private string _VideoPublicKey;
		
		private string _VideoSecretKey;
		
		private System.Nullable<int> _VideoFeedNumber;
		
		private string _VideoBaseUrl;
		
		private string _VideoPhotoURL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnApiChanging(string value);
    partial void OnApiChanged();
    partial void OnBaseUrlChanging(string value);
    partial void OnBaseUrlChanged();
    partial void OnBlogIdChanging(System.Nullable<int> value);
    partial void OnBlogIdChanged();
    partial void OnPortalIdChanging(System.Nullable<int> value);
    partial void OnPortalIdChanged();
    partial void OnTabIdChanging(System.Nullable<int> value);
    partial void OnTabIdChanged();
    partial void OnDomainNameChanging(string value);
    partial void OnDomainNameChanged();
    partial void OnLimitChanging(System.Nullable<int> value);
    partial void OnLimitChanged();
    partial void OnIncUpdatedFeedContentValueChanging(int value);
    partial void OnIncUpdatedFeedContentValueChanged();
    partial void OnCounterChanging(System.Nullable<int> value);
    partial void OnCounterChanged();
    partial void OnVideoPublicKeyChanging(string value);
    partial void OnVideoPublicKeyChanged();
    partial void OnVideoSecretKeyChanging(string value);
    partial void OnVideoSecretKeyChanged();
    partial void OnVideoFeedNumberChanging(System.Nullable<int> value);
    partial void OnVideoFeedNumberChanged();
    partial void OnVideoBaseUrlChanging(string value);
    partial void OnVideoBaseUrlChanged();
    partial void OnVideoPhotoURLChanging(string value);
    partial void OnVideoPhotoURLChanged();
    #endregion
		
		public BraftonTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Api", DbType="NVarChar(MAX)")]
		public string Api
		{
			get
			{
				return this._Api;
			}
			set
			{
				if ((this._Api != value))
				{
					this.OnApiChanging(value);
					this.SendPropertyChanging();
					this._Api = value;
					this.SendPropertyChanged("Api");
					this.OnApiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUrl", DbType="NVarChar(MAX)")]
		public string BaseUrl
		{
			get
			{
				return this._BaseUrl;
			}
			set
			{
				if ((this._BaseUrl != value))
				{
					this.OnBaseUrlChanging(value);
					this.SendPropertyChanging();
					this._BaseUrl = value;
					this.SendPropertyChanged("BaseUrl");
					this.OnBaseUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogId", DbType="Int")]
		public System.Nullable<int> BlogId
		{
			get
			{
				return this._BlogId;
			}
			set
			{
				if ((this._BlogId != value))
				{
					this.OnBlogIdChanging(value);
					this.SendPropertyChanging();
					this._BlogId = value;
					this.SendPropertyChanged("BlogId");
					this.OnBlogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int")]
		public System.Nullable<int> PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabId", DbType="Int")]
		public System.Nullable<int> TabId
		{
			get
			{
				return this._TabId;
			}
			set
			{
				if ((this._TabId != value))
				{
					this.OnTabIdChanging(value);
					this.SendPropertyChanging();
					this._TabId = value;
					this.SendPropertyChanged("TabId");
					this.OnTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainName", DbType="NVarChar(MAX)")]
		public string DomainName
		{
			get
			{
				return this._DomainName;
			}
			set
			{
				if ((this._DomainName != value))
				{
					this.OnDomainNameChanging(value);
					this.SendPropertyChanging();
					this._DomainName = value;
					this.SendPropertyChanged("DomainName");
					this.OnDomainNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Limit", DbType="Int")]
		public System.Nullable<int> Limit
		{
			get
			{
				return this._Limit;
			}
			set
			{
				if ((this._Limit != value))
				{
					this.OnLimitChanging(value);
					this.SendPropertyChanging();
					this._Limit = value;
					this.SendPropertyChanged("Limit");
					this.OnLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncUpdatedFeedContentValue", DbType="Int NOT NULL")]
		public int IncUpdatedFeedContentValue
		{
			get
			{
				return this._IncUpdatedFeedContentValue;
			}
			set
			{
				if ((this._IncUpdatedFeedContentValue != value))
				{
					this.OnIncUpdatedFeedContentValueChanging(value);
					this.SendPropertyChanging();
					this._IncUpdatedFeedContentValue = value;
					this.SendPropertyChanged("IncUpdatedFeedContentValue");
					this.OnIncUpdatedFeedContentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Counter", DbType="Int")]
		public System.Nullable<int> Counter
		{
			get
			{
				return this._Counter;
			}
			set
			{
				if ((this._Counter != value))
				{
					this.OnCounterChanging(value);
					this.SendPropertyChanging();
					this._Counter = value;
					this.SendPropertyChanged("Counter");
					this.OnCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoPublicKey", DbType="NVarChar(MAX)")]
		public string VideoPublicKey
		{
			get
			{
				return this._VideoPublicKey;
			}
			set
			{
				if ((this._VideoPublicKey != value))
				{
					this.OnVideoPublicKeyChanging(value);
					this.SendPropertyChanging();
					this._VideoPublicKey = value;
					this.SendPropertyChanged("VideoPublicKey");
					this.OnVideoPublicKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoSecretKey", DbType="NVarChar(MAX)")]
		public string VideoSecretKey
		{
			get
			{
				return this._VideoSecretKey;
			}
			set
			{
				if ((this._VideoSecretKey != value))
				{
					this.OnVideoSecretKeyChanging(value);
					this.SendPropertyChanging();
					this._VideoSecretKey = value;
					this.SendPropertyChanged("VideoSecretKey");
					this.OnVideoSecretKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoFeedNumber", DbType="Int")]
		public System.Nullable<int> VideoFeedNumber
		{
			get
			{
				return this._VideoFeedNumber;
			}
			set
			{
				if ((this._VideoFeedNumber != value))
				{
					this.OnVideoFeedNumberChanging(value);
					this.SendPropertyChanging();
					this._VideoFeedNumber = value;
					this.SendPropertyChanged("VideoFeedNumber");
					this.OnVideoFeedNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoBaseUrl", DbType="NVarChar(MAX)")]
		public string VideoBaseUrl
		{
			get
			{
				return this._VideoBaseUrl;
			}
			set
			{
				if ((this._VideoBaseUrl != value))
				{
					this.OnVideoBaseUrlChanging(value);
					this.SendPropertyChanging();
					this._VideoBaseUrl = value;
					this.SendPropertyChanged("VideoBaseUrl");
					this.OnVideoBaseUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoPhotoURL", DbType="NVarChar(MAX)")]
		public string VideoPhotoURL
		{
			get
			{
				return this._VideoPhotoURL;
			}
			set
			{
				if ((this._VideoPhotoURL != value))
				{
					this.OnVideoPhotoURLChanging(value);
					this.SendPropertyChanging();
					this._VideoPhotoURL = value;
					this.SendPropertyChanged("VideoPhotoURL");
					this.OnVideoPhotoURLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
